# Copyright (c) 2009, Aleksey Cheusov <vle@gmx.net>
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

# system variables
MKC_VERSION=@@version@@
MKC_EXECDIR?=@@execsdir@@

# user defined variables
MKC_SHOW_CACHED?=1       # set it to `0' to hide "...(cached)..." lines
MKC_DELETE_TMPFILES?=0   # set it to `1' to delete temporary files
MKC_CACHEDIR?=${.OBJDIR} # directory for cache and intermediate files

#
.include <bsd.own.mk>

mkc.environ=MKC_DELETE_TMPFILES=${MKC_DELETE_TMPFILES} MKC_SHOW_CACHED=${MKC_SHOW_CACHED} CC=${CC} CPPFLAGS=${CPPFLAGS} CFLAGS=${CFLAGS} LDFLAGS=${LDFLAGS} LDADD=${LDADD} MKC_CACHEDIR=${MKC_CACHEDIR}

# checking for headers
.for h in ${MKC_HEADERS}
HAVE.${h:S|/|_|g}!=	env ${mkc.environ} ${MKC_EXECDIR}/mkc_check_header ${h}
CFLAGS+=	-DHAVE_${h:tu:S|.|_|g:S|/|_|g}=${HAVE.${h:S|/|_|g}}
.endfor

# checking for functions in libraries
.for f in ${MKC_FUNCS}
HAVE.${f:S/:/./g}!=	env ${mkc.environ} ${MKC_EXECDIR}/mkc_check_func ${f:S/:/ /g}
.endfor

# checking for sizeof(xxx)
.for t in ${MKC_SIZEOF}
SIZEOF.${t:S| |_|g:S|*|P|g}!=	env ${mkc.environ} ${MKC_EXECDIR}/mkc_check_sizeof '${t}' '${defined(MKC_SIZEOF_INCS.${t}):?${MKC_SIZEOF_INCS.${t}}:}'
CFLAGS+=	-DSIZEOF_${t:S/-/_/g:S| |_|g:S|*|P|g:tu}=${SIZEOF.${t:S| |_|g:S|*|P|g}}
.endfor

# checking for declared #define
.for d in ${MKC_DEFINES}
HAVE_DEFINE.${d:S/./_/g:S/:/./g}!=	env ${mkc.environ} ${MKC_EXECDIR}/mkc_check_decl define ${d:S/:/ /g}
CFLAGS+=	-DHAVE_DEFINE_${d:tu:S/:/_/g:S/./_/g}=${HAVE_DEFINE.${d:S/./_/g:S/:/./g}}
.endfor

# checking for declared variables
.for d in ${MKC_VARS}
HAVE_VAR.${d:S/./_/g:S/:/./g}!=	env ${mkc.environ} ${MKC_EXECDIR}/mkc_check_decl var ${d:S/:/ /g}
CFLAGS+=	-DHAVE_VAR_${d:tu:S/:/_/g:S/./_/g}=${HAVE_VAR.${d:S/./_/g:S/:/./g}}
.endfor

# checking for declared functions
.for n in 0 1 2 3 4 5 6 7 8 9
.for d in ${MKC_FUNCS${n}}
HAVE_FUNC${n}.${d:S/./_/g:S/:/./g}!=	env ${mkc.environ} ${MKC_EXECDIR}/mkc_check_decl func${n} ${d:S/:/ /g}
CFLAGS+=	-DHAVE_FUNC${n}_${d:tu:S/:/_/g:S/./_/g}=${HAVE_FUNC${n}.${d:S/./_/g:S/:/./g}}
.endfor
.endfor

# error check
all : ${.OBJDIR}/.error-check
${.OBJDIR}/.error-check:
	@if test -z ${ERR_MSG}; then \
		touch $@; return 0; \
	else \
		echo ${ERR_MSG}; return 1; \
	fi
