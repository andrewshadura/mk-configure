#!/bin/sh

# Copyright (c) 2009, Aleksey Cheusov <vle@gmx.net>
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

pathpart="$(echo $1 | tr /. __)"

CACHE_DIR=${CACHE_DIR:=.}
CC=${CC:=cc}

tmpc=$CACHE_DIR/_mkc_headers_${pathpart}.c
tmpo=$CACHE_DIR/_mkc_headers_${pathpart}.o
tmperr=$CACHE_DIR/_mkc_headers_${pathpart}.err
cache=$CACHE_DIR/_mkc_headers_${pathpart}.res

if test -f "$cache"; then
    cached=1
    ret=$(cat "$cache")
else
    cached=0
    cat > "$tmpc" <<EOF
#include <$1>
int main ()
{
   return 0;
}
EOF

    if "$CC" -c -o "${tmpo}" "${tmpc}" 2>"${tmperr}"; then
	echo 1 > "$cache"
	ret=1
    else
	echo 0 > "$cache"
	ret=0
    fi
fi

printme (){
    if test "_$MKC_SHOW_CACHED" = _1 || test "_$cached" = _0; then
	printf "$@"
    fi
}

printme '%s' "checking for header $1..." 1>&2
if test $cached = _1; then
    printme ' (cached) ' 1>&2
fi

if test "$ret" -eq 1; then
    printme 'yes\n' 1>&2
else
    printme 'no\n' 1>&2
fi

echo $ret
