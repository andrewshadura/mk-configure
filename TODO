= 'bmake depend' and/or automatic generating .d files.

= Regression tests:
  - optional .f tests
  - optional .p tests
  - optional(!) glib2 tests

= PROGS= a b c d
  SRCS.a = ...
  SRCS.b = ...

= gnu-spesific

= support for cross-compilation

= improve shared libraries support, HP-UX, AIX, QNX, UnixWare, OSF1 etc.

= support for different compilers, OS + compilers + linker,
  OS + hardware + compiler etc.

= MKC_CHECK_CUSTOM:
   - MKC_CUSTOM_FN=xxx.f
   - MKC_CUSTOM_FN=xxx.objc

= MKC_CHECK_PROG_GAWK, MKC_CHECK_PROG_FLEX, MKC_CHECK_PROG_BISON,
  MKC_CHECK_PROG_GNUM4

= implement MANBZ2?

= mkc_install - replacement for broken/absent native install(1)

= mkc_mkdir   - portable BSD licensed "mkdir -p"

=    COPTS.<prog> and COPTS.lib<lib> variables
  or COPTS_<prog> and COPTS_lib<lib>?

= MLINKS?

= Improve support for C++, Objective-C, Fortran and Pascal

= Comparison with quagmire, kBuild, CMake, scons, waf, framewerk, pmk,
  MagicMakefiles etc.

= MKC_CHECK_BIGENDIAN

= Formatted output

= Improve mkc.pkg-config.mk

= Implement mkc.libtool.mk to make building
  the shared libraries really portable

= Implement mkc.qt.mk

= Implement mkc.subprjs.mk supporting dependency graph...

= Implement mkc.doxygen.mk?

= ??? (environment is limited in size) ???

=
     - With a help of MKC_CHECK_DEFINES (Ex: MKC_CHECK_DEFINES+=__GNUC__)
       mk-configure is able to detect the compiler at run-time.
       This makes possible to make SHLIB_xxx (bsd.lib.mk) portable
       to other compilers. Currently bsd.lib.mk (SHLIB_xxx) supports
       only GCC.
     - Often compilers need special options to make pthread code.
       Support for MKPTHREAD=yes|no is needed.
     - Support for libtool in addition to native bsd.{lib,prog}.rules.
       User's side variable USE_LIBTOOL=yes|no.

= mkc.configure.mk functionality but for bourne shell, e.g.

   Upstream creates ./configure shell script:
     MKC_CONFIG_MK=mkc_config.mk
     MKC_CONFIG_H=mkc_config.h

     MKC_CHECK_HEADERS='
        header1.h
        header2.h
        header3.h'
     MKC_CHECK_FUNCLIBS='
        func1:lib1
        func2
        func3:lib3'
     #<...>
     . mkc_configure
     mkc_run # generating mkc_config.h and mkc_config.mk

   User runs
     ./configure ...

=
   MKC_NOAUTO_abcdefg...
