MKC_REQUIRE_LIBS
MKC_REQUIRE_FUNCLIBS
MKC_REQUIRE_PROGS
MKC_REQUIRE_HEADERS

0) Closer integration with Simon Gerraty's Mk files.
   More testing is needed.

1)
     - With a help of MKC_CHECK_DEFINES (Ex: MKC_CHECK_DEFINES+=__GNUC__)
       mk-configure is able to detect the compiler at run-time.
       This makes possible to make SHLIB_xxx (bsd.lib.mk) portable
       to other compilers. Currently bsd.lib.mk (SHLIB_xxx) supports
       only GCC.
     - Often compilers need special options to make pthread code.
       Support for MKPTHREAD=yes|no is needed.
     - Support for libtool in addition to native bsd.{lib,prog}.rules.
       User's side variable USE_LIBTOOL=yes|no.

2) mkc.configure.mk functionality but for bourne shell, e.g.

   Upstream creates ./configure script:
     MKC_CONFIG_MK=mkc_config.mk
     MKC_CONFIG_H=mkc_config.h

     MKC_CHECK_HEADERS='
        header1.h
        header2.h
        header3.h'
     MKC_CHECK_FUNCLIBS='
        func1:lib1
        func2
        func3:lib3'
     #<...>
     . mkc_configure
     mkc_run # generating mkc_config.h and mkc_config.mk

   User runs
     ./configure ...

3) MKC_REQD - user settable variable for specifing minimal required
   version of mk-configure

4)
   MKC_NOAUTO_abcdefg...

5)
comparison with CMake, scons, waf, framewerk, pmk, etc.
bmake configure
bmake test
formatted bmake's output
mkc.pkg-config.mk
mkc.qt.mk
mkc.subdir.mk sucks, improve it
mkc.doxygen.mk
environment is limited in size
framewerk
kBuild
