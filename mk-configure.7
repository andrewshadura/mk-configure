.\"	$NetBSD$
.\"
.\" Copyright (c) 2009 by Aleksey Cheusov (vle@gmx.net)
.\" Absolutely no warranty.
.\"
.\" ------------------------------------------------------------------
.de VB \" Verbatim Begin
.ft CW
.nf
.ne \\$1
..
.de VE \" Verbatim End
.ft R
.fi
..
.\" ------------------------------------------------------------------
.TH MK-CONFIGURE 7 "Sep 2, 2009" "" ""
.SH NAME
mk-configure \- lightweight replacement for GNU autotools
.SH DESCRIPTION
.B mk-configure
is a collection of mkc.*.mk files for bmake (portable version of
NetBSD make) and a number of executables. It is intended to simplify
crossplatform development and software building.
.SS "mkc.files.mk"
The include file
.B <mkc.files.mk>
handles the FILES variables and is included
from
.BR <mkc.lib.mk> " and " <mkc.prog.mk> .
List of supported variables:
.IP FILES
The list of files to install.
.\" .IP CONFIGFILES Similar semantics to FILES, except that the files
.\"  are installed by the `configinstall' target,
.\"  not the `install' target.
.\"  The FILES* variables documented below also apply.
.IP FILESDIR
The location to install the files. It defaults to
.I ${PREFIX}/bin
.IP FILESDIR_<fn>
The location to install the specific file <fn>.
.IP FILESOWN
File owner. If
.B bmake
is run with root privileges, it defaults to
.I ${BINOWN}
or to `id -u` otherwise.
.IP FILESOWN_<fn>
File owner of the specific file <fn>.
.IP FILESGRP
File group. If
.B bmake
is run with root privileges, it defaults to
.I ${BINGRP}
or to `id -g` otherwise.
.IP FILESGRP_<fn>
File group of the specific file <fn>.
.IP FILESMODE
File mode. It defaults to
.I ${NONBINMODE}
.IP FILESMODE_<fn>
File mode of the specific file <fn>.
.IP FILESNAME
Optional name to install each file as.
.IP FILESNAME_<fn>
Optional name to install <fn> as.
.IP CLEANFILES
Additional files to remove for the
.IR clean ", " cleandir " and " distclean
targets.
.IP DISTCLEANFILES
Additional files to remove for the
.IR cleandir " and " distclean
targets.
.\" .IP FILESBUILD_<fn> A value different from "no" will add the file
 \" to the list of
.\" targets to be built by `realall'.  Users of that variable
.\" should provide a target to build the file.
.\" .IP BUILDSYMLINKS List of two word items:
.\" lnsrc lntgt
.\" For each lnsrc item, create a symlink named lntgt.
.\" The lntgt symlinks are removed by the cleandir target.
.\" .IP UUDECODE_FILES List of files which are stored as <file>.uue in
 \" the source
.\" tree. Each one will be decoded with ${TOOL_UUDECODE}.
.\" The source files have a `.uue' suffix, the generated files do 
.\" not.
.\" .IP UUDECODE_FILES_RENAME_<fn>
.\" Rename the output from the decode to the provided name.
.\" *NOTE: These files are simply decoded, with no install or other
.\" rule applying implicitly except being added to the clean
.\" target.
.SS "mkc.prog.mk"
The include file
.B <mkc.prog.mk>
handles building program from one or
more source files, along with their manual pages.  It has a limited
number of suffixes.
List of supported variables:
.IP PROG
The name of the program to build.  If not supplied, nothing
is built.
.IP PROGNAME
The name that the above program will be installed as, if
different from ${PROG}.
.IP SRCS
List of source files to build the program.  If SRCS is not
 defined, it's assumed to be ${PROG}.c.
.IP CFLAGS
Additional flags to the compiler when creating C objects.
.IP CPPFLAGS
Additional flags to the C pre-processor.
.IP LDADD
Additional objects.  Usually used for libraries.
For example, to link with the compatibility and utility
libraries, use:
.VB
    LDADD+=  -lutil -lcompat
.VE
.IP LDFLAGS
Additional linker flags. Often used for specifying library directories.
.VB
    LDFLAGS+=  -L/opt/company/software/lib
.VE
.IP BINDIR
Target directory for program. It defaults to
.I ${PREFIX}/bin
.IP BINMODE
Binary mode.
.IP BINOWN
File owner. If
.B bmake
is run by an unprivileged user, it defaults to `id -u`.
.IP BINGRP
File group. If
.B bmake
is run by an unprivileged user, it defaults to `id -g`.
.\"  .IP COPTS
.\"  Additional flags to the compiler when creating C objects.
.IP STRIPFLAG
The flag passed to the install program to cause the binary
to be stripped.
.IP SCRIPTS
A list of interpreter scripts (written in shell, awk, lua etc).
These are installed like programs.
.IP SCRIPTSNAME
The name that the above program will be installed as, if
different from ${SCRIPTS}.
.IP SCRIPTSNAME_<script>
Optional name to install <script> as.
.IP SCRIPTSDIR
Target directory for scripts.
It defaults to ${BINDIR}.
.IP SCRIPTSOWN
Script files owner. It defaults to ${BINOWN}.
.IP SCRIPTSGRP
Script file group. It defaults to ${BINGRP}.
.IP SCRIPTSMODE
Script file mode. It defaults to ${BINMODE}.
.IP LINKS
The list of binary links; should be full pathnames, the
linked-to file coming first, followed by the linked
file.  The files are hard-linked.  For example, to link
${BINDIR}/gzip and ${BINDIR}/gunzip, use:
.VB
    LINKS=   ${DESTDIR}/bin/gzip ${DESTDIR}${BINDIR}/gunzip
.VE
.IP SYMLINKS
The list of symbolic links; should be full pathnames.
Syntax is identical to LINKS. Note that DESTDIR is not
automatically included in the link.
.IP MAN
Manual pages (should end in .1 - .9).  If no MAN variable is
defined, "MAN=${PROG}.1" is assumed.
.IP MKMAN
If "no", don't build or install the man pages,
and also acts as "MKCATPAGES=no MKHTML=no".
Default: yes.
.IP MKCATPAGES
If "no", don't build or install the catman pages.
Default: no.
.IP MKHTML
If "no", don't build or install the HTML man pages.
Default: no
.IP MKINFO
If "no", don't build or install Info documentation from
Texinfo source files.
Default: yes
.IP MKSHARE
If "no", act as "MKHTML=no MKINFO=no MKCATPAGES=no MKMAN=no".
I.e, don't build catman pages, man pages, info
documentation,...
Default: yes
.IP "COPTS.<prog> OBJCCOPTS.<prog> LDADD.<prog> CPPFLAGS.<prog> CXXFLAGS.<prog>"
These provide a way to specify additions to the associated
variables in a way that applies only to a particular
program.  <prog> corresponds to either PROG
or PROG_CXX (if set).  For example, if COPTS.yourapp is
set to "-g", "-g" will be added to COPTS only when compiling
the "yourapp" application.
.PP
.B <mkc.prog.mk>
includes
.B <mkc.files.mk>
and therefore supports all variables supported by it.
.SS "mkc.lib.mk"
The include file
.B <mkc.lib.mk>
has support for building a static or dynanic library.  It has a
limited number of suffixes.
.B <mkc.lib.mk>
sets/uses the following variables:
.IP LIB
The name of the library to build.
.IP LIBDIR
Target directory for libraries. It defaults to 
.IR ${PREFIX}/lib .
.\" .IP SHLIBINSTALLDIR Target directory for shared libraries if
.\" ${USE_SHLIBDIR}
.\" is not "no".
.\" USE_SHLIBDIR If not "no", use ${SHLIBINSTALLDIR} instead of ${LIBDIR}
.\" as the path to install shared libraries to.
.\" USE_SHLIBDIR must be defined before <bsd.own.mk> is included.
.\" Default: no
.IP LIBOWN
Library owner. If
.B bmake
is run by an unprivileged user, it defaults to `id -u`.
.IP LIBGRP
Library group. If
.B bmake
is run by an unprivileged user, it defaults to `id -g`.
.IP LIBMODE
Library mode.
.\" .IP LIBISMODULE
.\" If not "no", install as ${LIB}.so (without the "lib" prefix).
.\" .\" and act as "MKDEBUGLIB=no MKLINT=no MKPICINSTALL=no
.\" .\" MKPROFILE=no MKSTATICLIB=no".
.\" Default: no
.\" .IP LIBISPRIVATE
.\" If not "no", act as MKPIC=no and
.\" , act as "MKDEBUGLIB=no MKLINT=no MKPIC=no
.\" MKPROFILE=no", and
.\" don't install the (.a) library.
.\" This is useful for "build only" helper libraries.
.\" Default: no
.\" .IP LIBISCXX
.\" If not "no", Use ${CXX} instead of ${CC} to link
.\" shared libraries.
.\" This is useful for C++ libraries.
.\" Default: no
.\" .IP LINTLIBDIR
.\" Target directory for lint libraries.
.IP LDADD
Additional objects. See LDADD in section
.I <mkc.prog.mk>
.IP LDFLAGS
Additional linker flags. See LDFLAGS in section
.I <mkc.prog.mk>
.IP MAN
The manual pages to be installed (use a .1 - .9 suffix).
.\" NOCHECKVER_<library>
.\" NOCHECKVER	If set, disables checking for installed shared object
.\" 		libraries with versions greater than the source.  A
.\" 		particular library name, without the "lib" prefix, may
.\" 		be appended to the variable name to disable the check for
.\" 		only that library.
.IP SRCS
List of source files to build the library.  Suffix types
 .s, .c, and .f are supported.  Note, .s files are preferred
 to .c files of the same name.
.\" (This is not the default for
.\"  versions of make.)
.\" LIBDPLIBS	A list of the tuples:
.\" 			libname  path-to-srcdir-of-libname
.\" 		For each tuple;
.\" 		     *	LIBDO.libname contains the .OBJDIR of the library
.\" 			`libname', and if it is not set it is determined
.\" 			from the srcdir and added to MAKEOVERRIDES (the
.\" 			latter is to allow for build time optimization).
.\" 		     *	LDADD gets  -L${LIBDO.libname} -llibname    added.
.\" 		     *	DPADD gets  ${LIBDO.libname}/liblibname.so  or
.\" 				    ${LIBDO.libname}/liblibname.a   added.
.\" 		This variable may be used for individual libraries, as
.\" 		well as in parent directories to cache common libraries 
.\" 		as a build-time optimization.
.\" 
.\" The include file <bsd.lib.mk> includes the file named "../Makefile.inc"
.\" if it exists, as well as the include file <bsd.man.mk>.
.\" 
.\" It has rules for building profiled objects; profiled libraries are
.\" built by default.
.IP INCS
The list of include files.
.IP INCSDIR
The location to install the include files.
.IP INCSNAME
Target name of the include file, if only one; same as
FILESNAME, but for include files.
.IP INCSNAME_<file>
The name file <file> should be installed as, if not <file>,
same as FILESNAME_<file>, but for include files.
.IP MKPIC
If "no", don't build or install shared libraries, and
also acts as "MKPICLIB=no"
Default: yes (for MACHINE_ARCHs that support it)
.IP MKPICINSTALL
If "no", don't install the *_pic.a libraries.
Default: no
.IP MKPROFILE
If "no", don't build or install the profiling (*_p.a) libraries.
Default: no
.IP "COPTS.lib<lib> OBJCCOPTS.lib<lib> LDADD.lib<lib> CPPFLAGS.lib<lib> CXXFLAGS.lib<lib>"
These provide a way to specify additions to the associated
variables in a way that applies only to a particular
library.  <lib> corresponds to a LIB variable.
For example, if COPTS.libfoobar is
set to "-g", "-g" will be added to COPTS only when compiling
the "libfoobar" library.
.PP
Libraries are ranlib'd when made.
.B <mkc.lib.mk>
includes
.B <mkc.files.mk>
and therefore supports all variables supported by it.
.SS "mkc.own.mk"
lalala
.SS "mkc.subdir.mk"
The include file
.B <mkc.subdir.mk>
contains the default targets for building
subdirectories.  It has the same targets as
.BR <mkc.prog.mk> .
For all of
the directories listed in the variable SUBDIR, the specified directory 
will be visited and the target made.  There is also a default target which
allows the command "make subdir" where subdir is any directory listed in
the variable SUBDIR.

As a special case, the use of a token
.WAIT
as an entry in SUBDIR acts
as a synchronization barrier when multiple make jobs are run; subdirs
before the 
.WAIT
must complete before any subdirs after .WAIT are
started.  See
.B bmake(1)
for some caveats on use of .WAIT and other
special sources.
.SS "mkc.configure.mk"
lalala
.SS "mkc.intexts.mk"
.B <mkc.intexts.mk>
is an auxiliary mk file that converts <fn>.in files to <fn> by expanding
the following @@ patterns:

.VB
 "Pattern     Result"
----------------------
@prefix@       ${PREFIX}
@bindir@       ${BINDIR}
@mandir@       ${MANDIR}
@sbindir@      ${SBINDIR}
@libdir@       ${LIBDIR}
@libexecdir@   ${LIBEXECDIR}
@datadir@      ${DATADIR}
@sysconfdir@   ${SYSCONFDIR}
@incsdir@      ${INCSDIR}
.VE

.B <mkc.intexts.mk>
supports the following variables:
.IP INFILES
List of files that needs to be generated.
.IP INSCRIPTS
List of scripts that needs to be generated.
.IP INTEXTS_SED
List of additional
.B sed(1)
expressions for expanding, e.g.
.VB
    INTEXTS_SED+=   -e 's,@version@,${VERSION},g'
.VE
.\" .SS "mkc.pkg-config.mk"
.\" lalala
.SH AUTHOR
Aleksey Cheusov <vle@gmx.net>
