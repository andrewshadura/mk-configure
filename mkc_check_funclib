#!/bin/sh

############################################################
# Copyright (c) 2009 by Aleksey Cheusov
#
# See COPYRIGHT file in the distribution.
############################################################

set -e

LC_ALL=C
export LC_ALL

##################################################
# options
usage (){
    cat <<EOF
mkc_check_funclib detects presense of function in a library
by compiling and linking a test program.

Usage: mkc_check_funclib function [librarries...]

Examples:
   mkc_check_funclib dlopen dl
   mkc_check_funclib dlopen
   mkc_check_funclib strlcpy
   mkc_check_funclib select socket
EOF
}

if test $# -eq 0; then
    usage
    exit 1
fi
if test "$1" = '-h' -o "$1" = '--help'; then
    usage
    exit 0
fi

##################################################
# initializing

pathpart=funclib_`echo $* | tr '/. ' ___`

funcname=$1
shift

. mkc_check_common.sh

for i in "$@"; do
    LDADD="$LDADD -l$i"
    libs_msg="$libs_msg -l$i"
done

if test -n "$libs_msg"; then
    libs_msg=" ($libs_msg )"
fi

##################################################
# test

check_itself (){
    # preparations
    cat > "$tmpc" <<EOF
void $funcname ();

int main ()
{
   $funcname ();
   return 0;
}
EOF

    # test itself
    if $CC -o "$tmpexe" "$tmpc" $LDFLAGS $LDADD 2>"$tmperr"; then
	echo 1
    else
	echo 0
    fi
}

check_and_cache "checking for function ${funcname}${libs_msg}" "$cache" "$@"

##################################################
# clean-ups

cleanup

##################################################
# finishing

if test "$ret" -eq 1; then
    printme 'yes\n' 1>&2
else
    printme 'no\n' 1>&2
fi

echo $ret
