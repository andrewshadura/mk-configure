======================================================================
Version 0.12.0, by Aleksey Cheusov, Thu, 12 Nov 2009 17:58:09 +0200

  mk-configure doesn't depend on external pkgsrc-mk-files anymore!
  The only required thing is bmake itself.  Everything else is inside
  mk-configure tarball now (yes, I've forked mk-files. Lots of fixes,
  clean-ups, reorganizations, additions, improvements, removals of
  useless code...). Some interesting things were stolen from NetBSD
  base system's mk-files.  Do not rely on things you found in
  NetBSD/pkgsrc/sjg mk-files or even mk-c sources! Only features
  documented in mk-configure.7 will be supported.

  A target "install-dirs" has been renamed to "installdirs".
  Ask mkc.subdir.mk why ;-)

  mkc.lib.mk:
    - Commands for building a .so/.dylib shared library
      is overridable by user (using bmake's "commands").

  Shared libraries
    - support for Darwin (.dylib and Apple's ld)
    - support for Solaris (gcc + Solaris' ld)
    - support for shared libraries is still terrible, more flexibility
      is needed.

  Variables:
    - New variables CLEANDIRS and DISTCLEANDIRS.
    - As of this release MKC_SHOW_CACHED defaults to 0.
    - New variable MKINSTALL. You can use it for internal static libraries.
    - New variable MKC_REQD. Minimal mk-configure version required. If
      this check fails, an entire build fails.
    - New variable USETBL. NOTE: It is "yes"/"no" variable.
    - New variable MANZ. NOTE: It is "yes"/"no" variable.
    - New variable SCRIPTSBIN that defaults to ${BINDIR}.
    - HTMLDIR is introduced containing directry for .html pages
      generated from manual pages. html pages are automatically
      installed if MKHTML=yes.
    - LDLIBS is not used anymore. Use LDADD for libraries.
    - DISTCLEANFILES modifyable by user contains a list of files
      removed by targets "cleandir" and "distdir"
    - New variable NROFF_MAN2DOC.

  Fixes:
    - A target "uninstall" now works correctly with .cat files.
    - configure.mk
      Workaround for buggy 20081111 < bmake < 20090909.
      See NetBSD BTS bin/41998:
          /usr/bin/make: .for loop + ":" inside iter_var = bug

  mk-configure:
    - "make distclean" run at the root mk-c's directory really removes
      all garbage.
    - TONS OF NEW REGRESSION TESTS. If you are running an exotic platform,
      run "bmake test" and send me results ;-)

  mkc_check_prog (MKC_CHECK_PROG):
    - Path to a found program is output instead of just "found" message.

  mkc_check_compiler - new utility, not used in mkc.*.mk yet.

======================================================================
Version 0.11.1, by Aleksey Cheusov, Sat,  5 Sep 2009 17:25:18 +0300

  fixed: path to awk in mkc_check_version script

======================================================================
Version 0.11.0, by Aleksey Cheusov, Sat,  5 Sep 2009 15:26:01 +0300

  mk-configure(7)

  Simon Gerrary's mk-files is not supported anymore.
  Use pkgsrc mk-files!

  Regression tests have been reorganized and significantly improved.
  All examples become regression tests.  Lots of new tests.
  Run 'bmake test' to run them.

  mk-configure uses its own mkc.*.mk scripts to build and install
  itself.  As a result Free/OpenBSD make cannot be used anymore for
  building and installations. Use bmake!

  ADDED: FAQ document to answer frequently asked questions.
  Thanks to Michael Shigorin for corrections.

  New simple module for regression tests: mkc.minitest.mk.  Besides
  its simplicity it is quite useful. mk-configure uses it for testing
  itself.

  Initial version of mkc.pkg-config.mk module
  See examples/hello_glib2 for the sample of use.
  Note that it is not complete yet.

  mkc.configure.mk and configure.mk:

      - checks are not run if appropriate HAVE_xxx.yyy variable is
        already defined. This makes possible to effectively build
        software in a well defined stable environment.
        Ex: bmake -f predefined_settings.mk -f Makefile all

      - ADDED: MKC_CHECK_TYPES for checking for types.
        See the documentation in configure.mk.in and examples/.

      - ADDED: MKC_CHECK_CUSTOM for custom user's checks.
        Custom check is a user's code.
        Check itself -- is this code compilable or not.
        See the documentation in configure.mk.in and examples/.

      - Behaviour of MKC_CHECK_MEMBERS changed: Now "struct " prefix
        is not hardcoded. This gives an ability to check members in
        struct-s, enum-s and typedef-s.

      - NEW: MKC_REQUIRE_HEADERS, MKC_REQUIRE_FUNCLIBS,
        MKC_REQUIRE_DEFINES, MKC_REQUIRE_TYPES, MKC_REQUIRE_VARS,
        MKC_REQUIRE_MEMBERS, MKC_REQUIRE_CUSTOM and
        MKC_REQUIRE_FUNCS<N>.  If these checks failure, bmake exits
        with error and prints an error message.  See configure.mk.in
        for the documentation and examples/ for the samples of use.

      - NEW: MKC_CHECK_PROGS and MKC_REQUIRE_PROGS.
        See configure.mk.in for the documentation and
        examples/ for the samples of use.

      - NEW: targets "distclean" and "cleandir" removes _mkc_* cache files.

      - NEW: target "configure" runs all checks
        and creates _mkc_ cache files.

      - all checks are disabled for targets "clean", "cleandir" and
        "distclean".

      -  Cache file names changed. Now they are:
           _mkc_type_<type>, _mkc_sizeof_<type>, _mkc_header_<header>,
           _mkc_funclib_<funclib>, _mkc_funcN_<func>,
           _mkc_variable_<variable>, _mkc_custom_<custom-check>,
           _mkc_prog_<progname>, _mkc_define_<define>, _mkc_member_<member>

  mkc.info.mk and mkc.man.mk are removed. They are included automatically
  from mkc.prog.mk, mkc.lib.mk and mkc.files.mk if needed.

  mkc.prog.mk, mkc.lib.mk, mkc.files.mk and mkc.subdir.mk:

      - NEW: target "uninstall" is supported.

      - performance improvements. "Hard" sections of mkc.common.mk are
      activated if and only if appropriate target is in action.

      - FIX: target "install-dirs" now works correctly with MAN
      containing .N pages where N is not 1.

      - FIX: target "install-dirs" now takes into account LINKS and
        SYMLINKS.

      - Better support for TEXINFO:
          - "uninstall" target takes TEXINFO into account.
          - "clean" target removes generated .info files.

      - mkc.{prog,lib,files}.mk supports a target "test".  By default
        it does nothing.  The target "test" of mkc.subdir.mk runs
        'bmake test' for each SUBDIR. If you want to define your own
        "test" target overriding the default one, define it in your
        project's Makefile before any .include <mkc.*.mk> directive.

      - MKC_REQD variable

  Makefile of mk-configure: README, NEWS, TODO, FAQ and COPYRIGHT
  files are also installed unless EXTRAFILES is set to an empty string.

  "mkc_check_sizeof" and "mkc_check_decl type" don't create cache
  files with spaces in its name anymore.  Space inside a filename is
  replaced with symbol ~ (tilde).

  FIXED: mkc_check_custom, mkc_check_decl, mkc_check_funclib,
  mkc_check_header and mkc_check_sizeof failed if CC contains space.
  Thanks to Vitaly Lipatov for the report.

  mkc_check_sizeof now works drammatically faster.

  MKHTML defaults to "no".

  mkc_check_sizeof, mkc_check_custom:
      - fixes for problems with Solaris' /bin/sh

  Other fixes and improvements.

======================================================================
Version 0.10.0, by Aleksey Cheusov, Sun, 31 May 2009 14:54:10 +0300

  mkc.configure.mk:

      New: MKC_CHECK_MEMBERS, mechanism for checking for structure
      members. Regression tests for this new feature. Man page update
      for mkc_check_decl. See the documentation for MKC_CHECK_MEMBERS
      in configure.mk file.

      Fix: HAVE_FUNCN.funcname.dir.header_h ->
           HAVE_FUNCN.funcname.dir_header_h
      New: Support for HAVE_VAR.varname.dir_header_h (dir/header.h!)
      New: Support for HAVE_DEFINE.defname.dir_header.h (dir/header.h!)
      New: MKC_COMMON_DEFINES.`uname -s`, e.g. MKC_COMMON_DEFINES.NetBSD,
           MKC_COMMON_DEFINES.Linux etc.

  "install-dirs" now work fully correctly, i.e. creates
  all required directories.

  New variable DPLIBS for listing -llibs for linking. Use DPLIBS
  instead of LDADD for linking with local libraries.
  See examples/8/hello/Makefile.

  mkc_check_decl:
     workaround for buggy ksh and FreeBSD /bin/sh.

======================================================================
Version 0.9.0, by Aleksey Cheusov, Sun, 29 Mar 2009 16:53:57 +0300

  Huge amount of changes were made since previous release.  Now
  mk-configure provides a number of mkc.*.mk scripts working on top of
  pkgsrc's mk files or Simon Gerraty's mk-files and therefore provides
  a replacement not only for GNU autoconf but for GNU automake too.
  It makes sense to reread README file.
  Lots of new information is there.

  Lots of examples (yes, hello_worlds applications :-) ) were created
  in examples/ subdirectory.

  Lots of new mkc.*.mk files were added. They work on top of bsd.*.mk
  files and provide new functions. See README.

  Regression tests were added. Thanks to them a number of bugs were
  detected and fixed.

  Fixes in configure.mk:
     - s/return/exit/ in ${.OBJDIR}/.error-check section.
       This bug is seen under Linux/bash.

     - bmake's variable SIZEOF.long_long was not set correctly
       (long-long din't work)

     - MKC_CHECK_SIZEOF+=type:header.h
       bmake's variable SIZEOF.<type>.<header_h> is set
       instead of plain SIZEOF.<type>

     - MKC_CHECK_HEADERS += dir/hdr.h
       bmake's variable: s/HAVE_HEADER.dir.hdr_h/HAVE_HEADER.dir_hdr_h/
       (`.' vs. `_')
       I hope this is a last change in configure.mk's API.

  My own mkc.intexts.mk bmake module (mk file).

  configure.mk:
    If CHECK_SIZEOF_xxx check fails, MKC_CFLAGS is not changed.  Only
    sucessful data type sizes are registered in MKC_CFLAGS and CFLAGS.

  mkc_check_decl, mkc_check_sizeof: they don't use MKC_COMMON_DEFINES
  environment enymore, everything should be passed through CFLAGS and
  CPPFLAGS.

  MKC_SHELL is currently disabled

======================================================================
Version 0.7.0, by Aleksey Cheusov, Sun, 15 Mar 2009 11:02:29 +0200

  No CFLAGS+=-DHAVE_XXXX=0 anymore, if XXX is not found
  it is not defined at all. autoconf works the same way.

  mkc_check_xxx scripts:
      - installed to bin/ directory just like normal scripts.

      - if MKC_VERBOSE variable is equal to '1', verbose messages
        are output to stderr.

      - -h|--help options printing usage information.

      - manual pages are created.

  new variable MKC_NOCACHE, if it is set to not empty string,
  caching is disabled.

  fix in mkc_check_decl: long-long is treated as 'long long'.

  MKC_SHOW_CACHED, MKC_VERBOSE, MKC_DELETE_TMPFILES, MKC_NOCACHE
  variables: 1 - true, other values - false.

  minor clean-ups in Makefile

======================================================================
Version 0.6.0, by Aleksey Cheusov, Sun,  8 Mar 2009 19:35:13 +0200

  MKC_FUNCLIBS_NOAUTO.ftime.compat is replaced
  with MKC_NOAUTO_FUNCLIBS list.

     Ex.:
       MKC_NOAUTO_FUNCLIBS += ftime:compat crypt:crypt
       MKC_NOAUTO_FUNCLIBS = 1 # for disabling
                               # all potential LDADD += ...

  fix: "checking for..." messages is now sent to stderr
  before result is calculated, not after.

  Support for heirloom-sh and ancient Solaris-10 /bin/sh

  added: MKC_SHELL variable defaulting to /bin/sh, mkc_check_XXX
  scripts are run with with this shell. This is variable is mainly for
  testing purposes but who knows.

======================================================================
Version 0.5.0, by Aleksey Cheusov, Tue,  3 Mar 2009 00:04:52 +0200

   Huge amount of changes. 0.5.0 is completely incompatible with 0.4.0
   because 0.4.0 was proof-of-concept only ;-) Everything was
   inspired by discussion in fido7.ru.unix.prog.

   Changing in API is also possible in the future until
   I stabilize it.

======================================================================
Version 0.4.0, by Aleksey Cheusov, Sat, 21 Feb 2009 22:47:20 +0200

   First publicly available release. Happy birth day! :-)
